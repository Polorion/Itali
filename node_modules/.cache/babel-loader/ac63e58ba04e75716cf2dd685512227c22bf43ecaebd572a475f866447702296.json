{"ast":null,"code":"const moveOpen = \"MOVE_OPEN\";\nconst openStart = \"OPEN_START\";\nconst restartEgg = \"RESTART_EGG\";\nconst setMandarin = \"SET_MANDARIN\";\nconst openFull = \"OPEN_FULL\";\nexport const moveOpenEgg = () => {\n  return {\n    type: moveOpen\n  };\n};\nexport const openFullWindow = () => {\n  return {\n    type: openFull\n  };\n};\nexport const refreshOpenMandarin = () => {\n  return {\n    type: setMandarin\n  };\n};\nexport const restartAllEggs = () => {\n  return {\n    type: restartEgg\n  };\n};\nexport const startOpenEgg = from => {\n  return {\n    type: openStart,\n    from\n  };\n};\nconst initialState = {\n  openChickenLeft: [{\n    id: 1,\n    position: 1\n  }, {\n    id: 2,\n    position: 2\n  }, {\n    id: 3,\n    position: 3\n  }, {\n    id: 4,\n    position: 4\n  }, {\n    id: 5,\n    position: 5\n  }],\n  openChickenPositionLeft: [],\n  openChickenRight: [{\n    id: 1,\n    position: 1\n  }, {\n    id: 2,\n    position: 2\n  }, {\n    id: 3,\n    position: 3\n  }, {\n    id: 4,\n    position: 4\n  }, {\n    id: 5,\n    position: 5\n  }],\n  openChickenPositionRight: [],\n  madarin: null,\n  full: false\n};\nconst openChickenReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SET_MANDARIN\":\n      {\n        return {\n          ...state,\n          madarin: null\n        };\n      }\n    case \"OPEN_FULL\":\n      {\n        return {\n          ...state,\n          full: !state.full\n        };\n      }\n    case \"OPEN_START\":\n      {\n        return {\n          ...state,\n          [action.from.type]: [1, ...state[action.from.type]],\n          madarin: action.from.chiken\n        };\n      }\n    case \"RESTART_EGG\":\n      {\n        return {\n          ...state,\n          openChickenPositionLeft: [],\n          openChickenPositionRight: []\n        };\n      }\n    case \"MOVE_OPEN\":\n      {\n        return {\n          ...state,\n          openChickenPositionLeft: state.openChickenPositionLeft.map(el => {\n            return el + 1;\n          }).filter(el => {\n            return el < 6;\n          }),\n          openChickenPositionRight: state.openChickenPositionRight.map(el => {\n            return el + 1;\n          }).filter(el => {\n            return el < 6;\n          })\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default openChickenReducer;","map":{"version":3,"names":["moveOpen","openStart","restartEgg","setMandarin","openFull","moveOpenEgg","type","openFullWindow","refreshOpenMandarin","restartAllEggs","startOpenEgg","from","initialState","openChickenLeft","id","position","openChickenPositionLeft","openChickenRight","openChickenPositionRight","madarin","full","openChickenReducer","state","action","chiken","map","el","filter"],"sources":["D:/gameOfEggs/ubuntu/src/store/reducers/OpenChickeReducer.js"],"sourcesContent":["const moveOpen = \"MOVE_OPEN\";\nconst openStart = \"OPEN_START\";\nconst restartEgg = \"RESTART_EGG\";\nconst setMandarin = \"SET_MANDARIN\";\nconst openFull = \"OPEN_FULL\";\n\nexport const moveOpenEgg = () => {\n  return {\n    type: moveOpen,\n  };\n};\nexport const openFullWindow = () => {\n  return {\n    type: openFull,\n  };\n};\n\nexport const refreshOpenMandarin = () => {\n  return {\n    type: setMandarin,\n  };\n};\nexport const restartAllEggs = () => {\n  return {\n    type: restartEgg,\n  };\n};\nexport const startOpenEgg = (from) => {\n  return {\n    type: openStart,\n    from,\n  };\n};\n\nconst initialState = {\n  openChickenLeft: [\n    {\n      id: 1,\n      position: 1,\n    },\n    {\n      id: 2,\n      position: 2,\n    },\n    {\n      id: 3,\n      position: 3,\n    },\n    {\n      id: 4,\n      position: 4,\n    },\n    {\n      id: 5,\n      position: 5,\n    },\n  ],\n  openChickenPositionLeft: [],\n  openChickenRight: [\n    {\n      id: 1,\n      position: 1,\n    },\n    {\n      id: 2,\n      position: 2,\n    },\n    {\n      id: 3,\n      position: 3,\n    },\n    {\n      id: 4,\n      position: 4,\n    },\n    {\n      id: 5,\n      position: 5,\n    },\n  ],\n  openChickenPositionRight: [],\n  madarin: null,\n  full: false,\n};\n\nconst openChickenReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_MANDARIN\": {\n      return {\n        ...state,\n\n        madarin: null,\n      };\n    }\n    case \"OPEN_FULL\": {\n      return {\n        ...state,\n\n        full: !state.full,\n      };\n    }\n\n    case \"OPEN_START\": {\n      return {\n        ...state,\n        [action.from.type]: [1, ...state[action.from.type]],\n        madarin: action.from.chiken,\n      };\n    }\n    case \"RESTART_EGG\": {\n      return {\n        ...state,\n        openChickenPositionLeft: [],\n        openChickenPositionRight: [],\n      };\n    }\n    case \"MOVE_OPEN\": {\n      return {\n        ...state,\n        openChickenPositionLeft: state.openChickenPositionLeft\n          .map((el) => {\n            return el + 1;\n          })\n          .filter((el) => {\n            return el < 6;\n          }),\n        openChickenPositionRight: state.openChickenPositionRight\n          .map((el) => {\n            return el + 1;\n          })\n          .filter((el) => {\n            return el < 6;\n          }),\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default openChickenReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}